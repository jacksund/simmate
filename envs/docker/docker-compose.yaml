
# https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/

# docker compose -f envs/docker/docker-compose.yml up -d

services:

  # ---------------------------------------------------------

  # WEB SERVER
  simmate-gunicorn-service:
    image: simmate-django:latest
    build:
       context: ../..
       dockerfile: envs/docker/web_server.dockerfile
    ports:
      - 8000:8000
    # Because we installed simmate through anaconda, our static files are located within the
    # conda env folder -- hence the long path. These static files are what we want in a volume
    # so that our nginx service can serve them.
    volumes:
      - staticfiles:/staticfiles
      # - staticfiles:/root/miniforge/envs/simmate_dev/lib/python3.10/site-packages/simmate/website/static
      # - mediafiles:/root/miniforge/envs/simmate_dev/lib/python3.10/site-packages/simmate/website/media
    environment:
      # The database connection URL follows the given format:
      #   postgresql://{DB_USER}:{DB_PASSWORD}@{DB_HOST}:{DB_PORT}/{DB_NAME}
      DATABASE_URL: postgresql://postgres:postgres@simmate-postgres-service:5432/simmate_prod
      DJANGO_ALLOWED_HOSTS: "*"
      DJANGO_CSRF_TRUSTED_ORIGINS: "http://localhost:1337"
      DEBUG: "True"
      # TODO --- need to update these to match helm chart
      EMAIL_HOST: 123
      EMAIL_FROM: 123
      EMAIL_USER: 123
      EMAIL_PASSWORD: 123
      MICROSOFT_CLIENT_ID: 123
      MICROSOFT_SECRET: 123
      LOGIN_MESSAGE: 123
      REQUIRE_LOGIN_INTERNAL: 123
      REQUIRE_LOGIN_EXCEPTIONS: 123
      PROFILE_VIEW: 123
    depends_on:
      - simmate-postgres-service

  # --------------------------------------------------------

  # STATIC FILE SERVER
  simmate-nginx-service:
    # https://hub.docker.com/_/nginx
    # image: nginx:stable 
    image: simmate-nginx:latest
    build:
       context: ../..
       dockerfile: envs/docker/staticfiles_server.dockerfile
    volumes:
      - staticfiles:/staticfiles
      # - mediafiles:/root/miniforge/envs/simmate_dev/lib/python3.10/site-packages/simmate/website/media
    ports:
      # BUG: first port number here MUST be 80 for django-unicorn ajax requests to work
      # If this is changed, then you need to set DJANGO_CSRF_TRUSTED_ORIGINS as shown
      # above in the simmate-gunicorn-service.
      - 1337:80
    depends_on:
      - simmate-gunicorn-service

  # --------------------------------------------------------

  # DATABASE SERVER
  simmate-postgres-service:
    # image: postgres:latest
    image: informaticsmatters/rdkit-cartridge-debian:latest
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    ports:
      - 5433:5432

  # --------------------------------------------------------

  # EXTRA HELPFUL GUIs & SERVICES

  # simmate-pgadmin-service:
  #   image: dpage/pgadmin4:4.23
  #   environment:
  #       PGADMIN_DEFAULT_EMAIL: jacksundberg123@gmail.com
  #       PGADMIN_DEFAULT_PASSWORD: password123
  #       PGADMIN_LISTEN_PORT: 80
  #   ports:
  #       - 16543:80
  #   volumes:
  #       - pgadmin:/var/lib/pgadmin
  #   depends_on:
  #       - simmate-postgres-service

# ------------

volumes:
  postgres-data:
  staticfiles:
  # mediafiles:
  # pgadmin:

# ------------
