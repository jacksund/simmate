
# This file configures settings for utilities like pytest and coverage. We prefer 
# to use this file over files like "pytest.ini" because pyproject.toml has 
# more uses that we may need in the future (i.e. it can use other modules)

# -----------------------------------------------------------------------------

# These settings initialize pytest and django-pytest.
[tool.pytest.ini_options]

# Tell django-pytest settings for a dummy database and also website interaction.
# To disable django-pytest, add "-p no:django" to your pytest command
DJANGO_SETTINGS_MODULE = "simmate.configuration.django.settings_test"

# We classify all tests so that we can run different subgroups of tests. You can
# run the tests marked with "slow"... "pytest -m slow"
markers = [
    "blender: requires blender installed",
    "pymatgen: runs a pymatgen-compatibility test",
    "vasp: requires vasp installed",
    "prefect_db: requires access to the prefect database",
    "slow: test is slow (>30s) and unstable in in the CI",
]

# By default, we only want to run unmarked tests. The simplest way to do this
# without adding extra files is to just list "not <marker1> and not <marker2" 
# for all of them. We also want migrations to be built from scratch, not past 
# migration folders.
# I manually remove -m when testing coverage, but am unsure if there's a better
# way to do this.
addopts = "--no-migrations -m 'not blender and not pymatgen and not vasp and not slow and not prefect_db'"

# There are a number of warnings that are expected when running our tests.
# We remove these from our output for clarity.
filterwarnings = [
    "ignore:cannot collect test class*:Warning",
    "ignore:Issues encountered while parsing CIF*:Warning",
    "ignore:No POTCAR file with matching TITEL fields*:Warning",
    "ignore:The input structure does not match the expected standard primitive!*:Warning",
    "ignore:Maximum iteration number is reached*:Warning",
    # "ignore:*is an unconverged VASP run*:Warning", BUG: why won't this regex work?
]

# -----------------------------------------------------------------------------

# These settings initialize the python coverage module. With this file, you can
# just use "coverage run" in the  base directory without configuring any
# other settings in the command.
[tool.coverage.run]

# all tests are written using pytest, so we always need this module set
command_line = "-m pytest"

# when testing coverage, we want to ignore the test files themselves.
omit = ["*/test_*", "*/conftest.py", "*/*_test.py"]

# consider adding for coverage of templates
# plugins = django_coverage_plugin  

# -----------------------------------------------------------------------------
