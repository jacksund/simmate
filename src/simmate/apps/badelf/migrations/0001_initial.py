# Generated by Django 4.2.7 on 2024-02-22 18:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core_components", "0002_alter_fingerprint_id_alter_fingerprintpool_id"),
    ]

    operations = [
        migrations.CreateModel(
            name="BadElf",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, db_index=True, null=True),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, db_index=True, null=True),
                ),
                ("source", models.JSONField(blank=True, null=True)),
                ("structure", models.TextField(blank=True, null=True)),
                ("nsites", models.IntegerField(blank=True, null=True)),
                ("nelements", models.IntegerField(blank=True, null=True)),
                ("elements", models.JSONField(blank=True, null=True)),
                (
                    "chemical_system",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                ("density", models.FloatField(blank=True, null=True)),
                ("density_atomic", models.FloatField(blank=True, null=True)),
                ("volume", models.FloatField(blank=True, null=True)),
                ("volume_molar", models.FloatField(blank=True, null=True)),
                (
                    "formula_full",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "formula_reduced",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "formula_anonymous",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("finished_at", models.DateTimeField(blank=True, null=True)),
                ("total_time", models.FloatField(blank=True, null=True)),
                ("queue_time", models.FloatField(blank=True, null=True)),
                (
                    "workflow_name",
                    models.CharField(blank=True, max_length=75, null=True),
                ),
                (
                    "workflow_version",
                    models.CharField(blank=True, max_length=75, null=True),
                ),
                (
                    "computer_system",
                    models.CharField(blank=True, max_length=75, null=True),
                ),
                ("directory", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "run_id",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("corrections", models.JSONField(blank=True, null=True)),
                ("oxidation_states", models.JSONField(blank=True, null=True)),
                ("algorithm", models.CharField(blank=True, max_length=75, null=True)),
                ("charges", models.JSONField(blank=True, null=True)),
                ("min_dists", models.JSONField(blank=True, null=True)),
                ("atomic_volumes", models.JSONField(blank=True, null=True)),
                ("element_list", models.JSONField(blank=True, null=True)),
                ("vacuum_charge", models.FloatField(blank=True, null=True)),
                ("vacuum_volume", models.FloatField(blank=True, null=True)),
                ("nelectrons", models.FloatField(blank=True, null=True)),
                ("nelectrides", models.IntegerField(blank=True, null=True)),
                ("electride_dim", models.JSONField(blank=True, null=True)),
                ("dim_cutoffs", models.JSONField(blank=True, null=True)),
                ("coord_envs", models.JSONField(blank=True, null=True)),
                (
                    "spacegroup",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core_components.spacegroup",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
