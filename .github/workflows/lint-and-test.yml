
# This job runs on all MRs and the main branch. It tests the code quality,
# any python unittests, any docker builds, etc.

name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # every Sunday at 23:00 UTC
    - cron: "0 23 * * 0"

jobs:

  lint-check:
    name: Code Quality Check
    runs-on: "ubuntu-latest"
    steps:
      - name: Initial setup
        uses: actions/checkout@v3
      - name: Black
        uses: psf/black@stable
      - name: iSort
        uses: isort/isort-action@master
      # TODO: djlint
      # TODO: maybe ruff for other file types

  python-test:
    # Establishes the combination of all OS and python versions
    # for us to test. The "steps" below will be ran for each
    # of these combinations.
    name: Python ${{ matrix.python-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.10", "3.11"]
    steps:
      - name: Initial setup
        uses: actions/checkout@v3

      - name: Create conda env and install deps
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          environment-file: envs/conda/ci.yaml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false
          activate-environment: simmate_dev
          channel-priority: strict
          # ensure we are using conda-forge and never the default channel
          miniforge-version: latest
          channels: conda-forge
          conda-remove-defaults: "true"
      # The lines "shell: bash -l {0}" ensure we use the created env below
      - name: Install Simmate
        shell: bash -l {0}
        run: |
          pip install -e .
      # --editable is needed because we need test files too
      - name: Run default tests
        shell: bash -l {0}
        run: |
          pytest --durations=15

  docker-build:
    name: Docker
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image-name: ["bader", "simmate", "quantum_espresso", "psi4"]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Initial setup
        uses: actions/checkout@v3
      - name: Build Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./envs/docker/${{ matrix.image-name }}.dockerfile
          push: false
